{"version":3,"sources":["shared/questions.js","components/HeaderComponent.js","components/HomeComponents.js","components/QuizComponent.js","components/CompletedComponent.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["QUESTIONS","category","type","difficulty","question","correct_answer","incorrect_answers","Header","props","Navbar","dark","expand","color","className","NavbarBrand","href","Nav","navbar","NavItem","to","Home","total","this","Container","id","Button","onClick","size","active","Component","Quiz","state","isSelected","isCorrect","isIncorrect","selected","onSelectOps","bind","suffledOps","correctAns","console","log","setState","userResult","localStorage","getItem","nextCorrectData","correct","parseInt","JSON","parse","setItem","stringify","correctData","progressBar","params","toFixed","cleanedQuestionData","split","re","res","cleanedQuestion","map","ques","splitts","push","join","cleanedCategoryData","cleanedCategory","cat","splitted","cleanedCorrectAnswerData","cleanedIncorrectAnswerData","op1","op2","op3","opsArr","incorrect","option","strIncorrect","Progress","value","currentQuestNum","Card","CardTitle","CardSubtitle","selectLevel","newOps","viewOps","sort","Math","random","slice","index","key","options","isCompleted","routingSwitch","currentQuestion","parseData","val","remainVal","multi","bar","correctProgressBar","RenderResult","RenderCompleted","onResetResultOnStart","removeItem","style","textAlign","Main","questions","ansArray","marks","next","lastItem","path","component","selectQuestion","length","exact","match","filter","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4844de54.chunk.js","sourcesContent":["export const QUESTIONS = [\n  {\n    category: \"Entertainment%3A%20Video%20Games\",\n    type: \"multiple\",\n    difficulty: \"hard\",\n    question:\n      \"What%20was%20the%20name%20of%20the%20hero%20in%20the%2080s%20animated%20video%20game%20%27Dragon%27s%20Lair%27%3F\",\n    correct_answer: \"Dirk%20the%20Daring\",\n    incorrect_answers: [\"Arthur\", \"Sir%20Toby%20Belch\", \"Guy%20of%20Gisbourne\"],\n  },\n  {\n    category: \"Animals\",\n    type: \"multiple\",\n    difficulty: \"easy\",\n    question:\n      \"What%20is%20the%20scientific%20name%20for%20modern%20day%20humans%3F\",\n    correct_answer: \"Homo%20Sapiens\",\n    incorrect_answers: [\n      \"Homo%20Ergaster\",\n      \"Homo%20Erectus\",\n      \"Homo%20Neanderthalensis\",\n    ],\n  },\n  {\n    category: \"Entertainment%3A%20Books\",\n    type: \"multiple\",\n    difficulty: \"hard\",\n    question: \"What%20is%20Ron%20Weasley%27s%20middle%20name%3F\",\n    correct_answer: \"Bilius\",\n    incorrect_answers: [\"Arthur\", \"John\", \"Dominic\"],\n  },\n  {\n    category: \"Entertainment%3A%20Comics\",\n    type: \"multiple\",\n    difficulty: \"easy\",\n    question:\n      \"Who%20is%20the%20creator%20of%20the%20comic%20series%20%22The%20Walking%20Dead%22%3F\",\n    correct_answer: \"Robert%20Kirkman\",\n    incorrect_answers: [\n      \"Stan%20Lee\",\n      \"Malcolm%20Wheeler-Nicholson\",\n      \"Robert%20Crumb\",\n    ],\n  },\n  {\n    category: \"Entertainment%3A%20Board%20Games\",\n    type: \"multiple\",\n    difficulty: \"medium\",\n    question:\n      \"At%20the%20start%20of%20a%20standard%20game%20of%20the%20Monopoly%2C%20if%20you%20throw%20a%20double%20six%2C%20which%20square%20would%20you%20land%20on%3F\",\n    correct_answer: \"Electric%20Company\",\n    incorrect_answers: [\"Water%20Works\", \"Chance\", \"Community%20Chest\"],\n  },\n  {\n    category: \"Geography\",\n    type: \"multiple\",\n    difficulty: \"easy\",\n    question: \"What%20is%20the%20capital%20of%20Jamaica%3F\",\n    correct_answer: \"Kingston\",\n    incorrect_answers: [\"Rio%20de%20Janeiro\", \"Dar%20es%20Salaam\", \"Kano\"],\n  },\n  {\n    category: \"History\",\n    type: \"multiple\",\n    difficulty: \"medium\",\n    question:\n      \"When%20did%20Jamaica%20recieve%20its%20independence%20from%20England%3F%20\",\n    correct_answer: \"1962\",\n    incorrect_answers: [\"1492\", \"1963\", \"1987\"],\n  },\n  {\n    category: \"Animals\",\n    type: \"boolean\",\n    difficulty: \"easy\",\n    question:\n      \"Kangaroos%20keep%20food%20in%20their%20pouches%20next%20to%20their%20children.\",\n    correct_answer: \"False\",\n    incorrect_answers: [\"True\"],\n  },\n  {\n    category: \"General%20Knowledge\",\n    type: \"multiple\",\n    difficulty: \"medium\",\n    question:\n      \"In%202013%20how%20much%20money%20was%20lost%20by%20Nigerian%20scams%3F\",\n    correct_answer: \"%2412.7%20Billion\",\n    incorrect_answers: [\n      \"%2495%20Million\",\n      \"%24956%20Million\",\n      \"%242.7%20Billion\",\n    ],\n  },\n  {\n    category: \"History\",\n    type: \"multiple\",\n    difficulty: \"medium\",\n    question:\n      \"How%20old%20was%20Lyndon%20B.%20Johnson%20when%20he%20assumed%20the%20role%20of%20President%20of%20the%20United%20States%3F\",\n    correct_answer: \"55\",\n    incorrect_answers: [\"50\", \"60\", \"54\"],\n  },\n  {\n    category: \"Entertainment%3A%20Video%20Games\",\n    type: \"multiple\",\n    difficulty: \"hard\",\n    question:\n      \"In%20World%20of%20Warcraft%20lore%2C%20who%20organized%20the%20creation%20of%20the%20Paladins%3F\",\n    correct_answer: \"Alonsus%20Faol\",\n    incorrect_answers: [\n      \"Uther%20the%20Lightbringer\",\n      \"Alexandros%20Mograine\",\n      \"Sargeras%2C%20The%20Daemon%20Lord\",\n    ],\n  },\n  {\n    category: \"Entertainment%3A%20Video%20Games\",\n    type: \"boolean\",\n    difficulty: \"medium\",\n    question:\n      \"In%20the%20game%20%22Subnautica%22%2C%20a%20%22Cave%20Crawler%22%20will%20attack%20you.\",\n    correct_answer: \"True\",\n    incorrect_answers: [\"False\"],\n  },\n  {\n    category: \"Entertainment%3A%20Japanese%20Anime%20%26%20Manga\",\n    type: \"multiple\",\n    difficulty: \"medium\",\n    question:\n      \"What%20is%20the%20name%20of%20the%20device%20that%20allows%20for%20infinite%20energy%20in%20the%20anime%20%22Dimension%20W%22%3F\",\n    correct_answer: \"Coils\",\n    incorrect_answers: [\"Wires\", \"Collectors\", \"Tesla\"],\n  },\n  {\n    category: \"Entertainment%3A%20Video%20Games\",\n    type: \"multiple\",\n    difficulty: \"medium\",\n    question:\n      \"What%20is%20the%20name%20of%20Cream%20the%20Rabbit%27s%20mom%20in%20the%20%22Sonic%20the%20Hedgehog%22%20series%3F\",\n    correct_answer: \"Vanilla\",\n    incorrect_answers: [\"Peach\", \"Strawberry\", \"Mint\"],\n  },\n  {\n    category: \"History\",\n    type: \"multiple\",\n    difficulty: \"easy\",\n    question:\n      \"These%20two%20countries%20held%20a%20commonwealth%20from%20the%2016th%20to%2018th%20century.\",\n    correct_answer: \"Poland%20and%20Lithuania\",\n    incorrect_answers: [\n      \"Hutu%20and%20Rwanda\",\n      \"North%20Korea%20and%20South%20Korea\",\n      \"Bangladesh%20and%20Bhutan\",\n    ],\n  },\n  {\n    category: \"Entertainment%3A%20Television\",\n    type: \"multiple\",\n    difficulty: \"hard\",\n    question:\n      \"Which%20of%20these%20voices%20wasn%27t%20a%20choice%20for%20the%20House%20AI%20in%20%22The%20Simpsons%20Treehouse%20of%20Horror%22%20short%2C%20House%20of%20Whacks%3F\",\n    correct_answer: \"George%20Clooney\",\n    incorrect_answers: [\n      \"Matthew%20Perry\",\n      \"Dennis%20Miller\",\n      \"Pierce%20Brosnan\",\n    ],\n  },\n  {\n    category: \"Entertainment%3A%20Music\",\n    type: \"multiple\",\n    difficulty: \"medium\",\n    question:\n      \"From%20which%20album%20is%20the%20Gorillaz%20song%2C%20%22On%20Melancholy%20Hill%22%20featured%20in%3F\",\n    correct_answer: \"Plastic%20Beach\",\n    incorrect_answers: [\"Demon%20Days\", \"Humanz\", \"The%20Fall\"],\n  },\n  {\n    category: \"General%20Knowledge\",\n    type: \"boolean\",\n    difficulty: \"easy\",\n    question:\n      \"Scotland%20voted%20to%20become%20an%20independent%20country%20during%20the%20referendum%20from%20September%202014.\",\n    correct_answer: \"False\",\n    incorrect_answers: [\"True\"],\n  },\n  {\n    category: \"Entertainment%3A%20Video%20Games\",\n    type: \"multiple\",\n    difficulty: \"medium\",\n    question:\n      \"In%20Left%204%20Dead%2C%20which%20campaign%20has%20the%20protagonists%20going%20through%20a%20subway%20in%20order%20to%20reach%20a%20hospital%20for%20evacuation%3F\",\n    correct_answer: \"No%20Mercy\",\n    incorrect_answers: [\n      \"Subway%20Sprint\",\n      \"Hospital%20Havoc\",\n      \"Blood%20Harvest\",\n    ],\n  },\n  {\n    category: \"History\",\n    type: \"multiple\",\n    difficulty: \"hard\",\n    question:\n      \"What%20was%20the%20last%20colony%20the%20UK%20ceded%20marking%20the%20end%20of%20the%20British%20Empire%3F\",\n    correct_answer: \"Hong%20Kong\",\n    incorrect_answers: [\"India\", \"Australia\", \"Ireland\"],\n  },\n];\n","import React from \"react\";\nimport { Nav, Navbar, NavbarBrand, NavItem } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Header(props) {\n  return (\n    <div>\n      <Navbar dark expand=\"md\" color=\"info\">\n        <div className=\"container\">\n          <NavbarBrand className=\"mr-auto\" href=\"/\">\n            Outlier\n          </NavbarBrand>\n        </div>\n        <Nav navbar>\n          <NavItem>\n            <NavLink className=\"nav-link active\" to=\"/home\">\n              <span className=\"fa fa-home fa-lg\"></span> Home\n            </NavLink>\n          </NavItem>\n        </Nav>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Container, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n//import car from './images/Quiz.jpg';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const total = this.props.total;\n\n    return (\n      \n      <div>\n        <Container>\n        {/* <div  styles={{ backgroundImage:`url(${car})` }}></div> */}\n          <div className=\"btnPosition\">\n            <div className=\"row justify-content-md-center\">\n              <div id=\"startBtn\" className=\"col col-lg-2 md-2\">\n                <Link to={`/question/${this.props.id}`}>\n                  <Button\n                    onClick={() => this.props.onClick(total)}\n                    color=\"success\"\n                    size=\"lg\"\n                    active\n                  >\n                    <span className=\"fa fa-play fa-lg\"></span> Start Test\n                  </Button>\n                </Link>\n              </div>\n              <div id=\"resultBtn\" className=\"col col-lg-3 md-2\">\n                <Link to=\"/result\">\n                  <Button color=\"primary\" size=\"lg\" active>\n                    <span className=\"fa fa-forward fa-lg\"></span> Go To Result\n                    Page\n                  </Button>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Progress } from \"reactstrap\";\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  CardText,\n  CardSubtitle,\n} from \"reactstrap\";\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSelected: false,\n      isCorrect: null,\n      isIncorrect: null,\n      selected: 0,\n    };\n    this.onSelectOps = this.onSelectOps.bind(this);\n  }\n\n  onSelectOps(suffledOps, correctAns) {\n    let isSelected = this.state.isSelected;\n    if (!isSelected) {\n      console.log(suffledOps);\n      this.setState({ isSelected: true });\n      if (suffledOps === correctAns) {\n        let userResult = localStorage.getItem(\"userResult\");\n        if (!userResult) {\n          let initVal = 1;\n          const correctData = {\n            correct: initVal,\n            total: this.props.total,\n          };\n          localStorage.setItem(\"userResult\", JSON.stringify(correctData));\n        } else {\n          let getVal = parseInt(JSON.parse(userResult).correct);\n          let newVal = getVal + 1;\n\n          const nextCorrectData = {\n            correct: newVal,\n            total: this.props.total,\n          };\n\n          localStorage.setItem(\"userResult\", JSON.stringify(nextCorrectData));\n        }\n\n        this.setState({ isCorrect: true }, () => {\n          console.log(this.state.isCorrect);\n        });\n      } else if (suffledOps !== correctAns) {\n        this.setState({ isIncorrect: true });\n      } else {\n        this.setState({ isCorrect: false }, () => {\n          console.log(this.state.isCorrect);\n        });\n\n        this.setState({ isIncorrect: false }, () => {\n          console.log(this.state.isIncorrect);\n        });\n      }\n    } else {\n      return <div></div>;\n    }\n  }\n\n  render() {\n    const correctProgressBar = () => {\n      let userResult = localStorage.getItem(\"userResult\");\n      if (userResult) {\n        let parseData = JSON.parse(userResult);\n        let total = parseData.total;\n        let correct = parseData.correct;\n        const val = (correct / total) * 100;\n        const remainVal = 100 - val;\n        return (\n          <div>\n            <span id=\"correctPercentage\">\n              <b>{val}% </b>{\" \"}\n            </span>\n            <span id=\"incorrectPercentage1\">\n              <b>{remainVal}% </b>\n            </span>\n            <Progress multi>\n              <Progress bar color=\"success\" value={val} />\n              <Progress bar color=\"danger\" value={remainVal} />\n            </Progress>\n          </div>\n        );\n      } else {\n        let defaultVal = 100;\n        return (\n          <div>\n            <span id=\"incorrectPercentage\">\n              <b>{defaultVal}% </b>\n            </span>\n            <Progress color=\"danger\" value={defaultVal} />\n          </div>\n        );\n      }\n    };\n\n    const progressBar = () => {\n      const total = this.props.total;\n      const params = this.props.params;\n      const currentQuestNum = parseInt(params) + 1;\n      const val = (currentQuestNum / total) * 100;\n      return val.toFixed();\n    };\n\n    const incorrectRender = () => {\n      const isIncorrect = this.state.isIncorrect;\n      if (isIncorrect) {\n        return (\n          <div className=\"incorrect\">\n            <h3> Sorry! </h3>\n          </div>\n        );\n      } else {\n        return <div></div>;\n      }\n    };\n\n    const correctRender = () => {\n      const isCorrect = this.state.isCorrect;\n      if (isCorrect) {\n        return (\n          <div className=\"correct\">\n            <h3> Correct! </h3>\n          </div>\n        );\n      } else {\n        return <div></div>;\n      }\n    };\n\n    const routingSwitch = (total) => {\n      const isCompleted = this.props.isCompleted;\n      if (isCompleted) {\n        return (\n          <Link to=\"/result\">\n            <Button\n              id=\"nextQuestion\"\n              onClick={() => this.props.onClick(total)}\n              color=\"success\"\n            >\n              <span className=\"fa fa-forward fa-lg\"></span> Go TO Result Page\n            </Button>\n          </Link>\n        );\n      } else {\n        return (\n          <Link to={`/question/${this.props.id}`}>\n            <Button\n              id=\"nextQuestion\"\n              onClick={() => this.props.onClick(total)}\n              color=\"secondary\"\n            >\n              <span className=\"fa fa-forward fa-lg\"></span> Next Question\n            </Button>\n          </Link>\n        );\n      }\n    };\n\n    const options = (cleanedIncorrectAnswerData, cleanedCorrectAnswerData) => {\n      const correctAns = cleanedCorrectAnswerData;\n      let newOps = cleanedIncorrectAnswerData;\n      newOps.push(cleanedCorrectAnswerData);\n\n      let res = newOps.sort(function () {\n        return 0.5 - Math.random();\n      });\n      let randomArr = res.slice(newOps, 4);\n      const viewOps = randomArr.map((suffledOps, index) => {\n        return (\n          <div key={index} className=\"col-sm-6 mt-5\">\n            <div\n              onClick={() => this.onSelectOps(suffledOps, correctAns)}\n              className=\"card questionCard\"\n            >\n              <div className=\"card-body\">\n                <div className=\"card-title\"> {suffledOps} </div>\n              </div>\n            </div>\n          </div>\n        );\n      });\n\n      return <div className=\"row\">{viewOps}</div>;\n    };\n\n    const selectLevel = (selected) => {\n      let difficulty = selected.difficulty;\n\n      if (difficulty === \"easy\") {\n        return (\n          <div>\n            <span className=\"fa fa-star\"></span>\n            <span className=\"fa fa-star easy\"></span>\n            <span className=\"fa fa-star easy\"></span>\n            <span className=\"fa fa-star easy\"></span>\n            <span className=\"fa fa-star easy\"></span>\n          </div>\n        );\n      } else if (difficulty === \"medium\") {\n        return (\n          <div>\n            <span className=\"fa fa-star\"></span>\n            <span className=\"fa fa-star\"></span>\n            <span className=\"fa fa-star easy\"></span>\n            <span className=\"fa fa-star easy\"></span>\n            <span className=\"fa fa-star easy\"></span>\n          </div>\n        );\n      } else if (difficulty === \"hard\") {\n        return (\n          <div>\n            <span className=\"fa fa-star\"></span>\n            <span className=\"fa fa-star\"></span>\n            <span className=\"fa fa-star \"></span>\n            <span className=\"fa fa-star easy\"></span>\n            <span className=\"fa fa-star easy\"></span>\n          </div>\n        );\n      } else {\n        return <div></div>;\n      }\n    };\n\n    const cleanedQuestionData = (selected) => {\n      const quesrRe = /%\\d\\d/;\n      let question = selected.question.split(quesrRe);\n      const re = /%\\dF/;\n      const res = /%\\dC/;\n      const cleanedQuestion = [];\n      question.map((ques) => {\n        let splitted = ques.split(re)[0];\n        let splitts = splitted.split(res)[0];\n        cleanedQuestion.push(splitts);\n      });\n      let strCleanedQues = cleanedQuestion.join(\" \");\n\n      return strCleanedQues;\n    };\n\n    const cleanedCategoryData = (selected) => {\n      const quesrRe = /%\\d\\d/;\n      let category = selected.category.split(quesrRe);\n      const re = /%\\dA/;\n      const cleanedCategory = [];\n      category.map((cat) => {\n        let splitted = cat.split(re)[0];\n        cleanedCategory.push(splitted);\n      });\n      let strCleanedCat = cleanedCategory.join(\" \");\n      return strCleanedCat;\n    };\n\n    const cleanedCorrectAnswerData = (selected) => {\n      const re = /%\\d\\d/;\n      let corrctAnswer = selected.correct_answer.split(re);\n      let strCorrectAnswer = corrctAnswer.join(\" \");\n      return strCorrectAnswer;\n    };\n\n    const cleanedIncorrectAnswerData = (selected) => {\n      const re = /%\\d\\d/;\n      const op1 = selected.incorrect_answers[0];\n      const op2 = selected.incorrect_answers[1];\n      const op3 = selected.incorrect_answers[2];\n\n      let opsArr = [];\n      if (op1 && op2 && op3) {\n        let incorrect = (option) => {\n          let splitted = option.split(re);\n          let strIncorrect = splitted.join(\" \");\n          opsArr.push(strIncorrect);\n        };\n\n        incorrect(op1);\n        incorrect(op2);\n        incorrect(op3);\n\n        return opsArr;\n      } else {\n        opsArr.push(op1);\n        return opsArr;\n      }\n    };\n\n    const currentQuestion = () => {\n      const selected = this.props.selected;\n      const total = this.props.total;\n      const params = this.props.params;\n      const currentQuestNum = parseInt(params) + 1;\n      cleanedQuestionData(selected);\n      cleanedCategoryData(selected);\n      cleanedCorrectAnswerData(selected);\n      cleanedIncorrectAnswerData(selected);\n\n      return (\n        <div>\n          <Card id=\"questionCard\" className=\"mt-3\">\n            <CardTitle>\n              <h1>\n                Question {currentQuestNum} of {total}\n              </h1>\n            </CardTitle>\n            <CardSubtitle>{cleanedCategoryData(selected)} </CardSubtitle>\n            {selectLevel(selected)}\n            <div className=\"mt-5\">\n              <h5> {cleanedQuestionData(selected)} ? </h5>\n            </div>\n            {options(\n              cleanedIncorrectAnswerData(selected),\n              cleanedCorrectAnswerData(selected)\n            )}\n            <div>{correctRender()}</div>\n            <div>{incorrectRender()} </div>\n            {routingSwitch(total)}\n          </Card>\n        </div>\n      );\n    };\n\n    return (\n      <div>\n        <div>\n          <Progress value={progressBar()} color=\"secondary\">\n            {progressBar()} %\n          </Progress>\n        </div>\n        <div className=\"container\">\n          {currentQuestion()}\n          <div className=\"bottomProgressBar\">{correctProgressBar()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Quiz;\n","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nfunction RenderResult(props) {\n  const userResult = JSON.parse(localStorage.getItem(\"userResult\"));\n  if (userResult) {\n    console.log(userResult);\n    const correctPrectentage = () => {\n      return ((userResult.correct / userResult.total) * 100).toFixed(2);\n    };\n    return (\n      <div className=\"result mt-5\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <h4> Total Questions : </h4>\n          </div>\n          <div className=\"col\">\n            <h4>{userResult.total}</h4>\n          </div>\n        </div>\n        <br />\n        <div className=\"row\">\n          <div className=\"col\">\n            <h4> Total Correct : </h4>\n          </div>\n          <div className=\"col\">\n            <h4>{userResult.correct}</h4>\n          </div>\n        </div>\n        <br />\n        <div className=\"row\">\n          <div className=\"col\">\n            <h4> Total Percentage : </h4>\n          </div>\n          <div className=\"col\">\n            <h4>{correctPrectentage()} %</h4>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <div className=\"errorMsg mt-5\">\n          <h2>Currently you are not given any test.</h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass RenderCompleted extends Component {\n  constructor(props) {\n    super(props);\n    this.onResetResultOnStart = this.onResetResultOnStart.bind(this);\n  }\n\n  onResetResultOnStart (){\n    localStorage.removeItem(\"userResult\");\n  };\n  \n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"card mt-5\">\n          <div className=\"card-title mt-5\">\n            <div style={{ color: \"Blue\", textAlign: \"center\" }}>\n              <h2>User Result Dashboard </h2>\n              <span>\n                _______________________________________________________\n              </span>\n            </div>\n          </div>\n          <div>\n            <RenderResult />\n          </div>\n          <Link to=\"/home\">\n            <Button onClick={this.onResetResultOnStart} className=\"mt-5\" id=\"backToHmeBtn\" color=\"success\">\n              <span className=\"fa fa-home fa-lg\"></span> Back To Home\n            </Button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RenderCompleted;\n","import React, { Component } from \"react\";\nimport { QUESTIONS } from \"../shared/questions\";\nimport { Switch, Route, Redirect, Router } from \"react-router-dom\";\nimport Header from \"./HeaderComponent\";\nimport Home from \"./HomeComponents\";\nimport Quiz from \"./QuizComponent\";\nimport RenderCompleted from \"./CompletedComponent\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questions: QUESTIONS,\n      id: 0,\n      isCompleted: false,\n      ansArray: [],\n      marks : 0\n   \n    };\n  }\n\n  selectQuestion(total) {\n    let next = this.state.id + 1;\n    let lastItem = parseInt(total) - 1;\n\n    if (next <= lastItem) {\n      this.setState({ id: next });\n    } else if (this.state.id === lastItem) {\n      this.setState({ isCompleted: true });\n    }\n  }\n\n  render() {\n    const SelectedQues = ({ match }) => {\n      const questions = this.state.questions;\n      if (questions) {\n        const selected = questions.filter(\n          (ques, index) => index === parseInt(match.params.id, 10)\n        )[0];\n        const total = questions.length;\n        const params = match.params.id;\n        return (\n          <Quiz\n            selected={selected}\n            total={total}\n            params={params}\n            id={this.state.id}\n            isCompleted={this.state.isCompleted}\n            onClick={() => this.selectQuestion(total)}\n            marks = {this.state.marks}\n           \n          \n          />\n        );\n      } else {\n        return <div></div>;\n      }\n    };\n\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route\n            path=\"/home\"\n            component={() => (\n              <Home\n                id={this.state.id}\n                onClick={() => this.selectQuestion(this.state.questions.length)}\n                total={this.state.questions.length}               \n                ansArray = { this.state.ansArray}\n              />\n            )}\n          />\n          <Route exact path=\"/question/:id\" component={SelectedQues} />\n          <Route path=\"/result\" component={RenderCompleted} />\n          <Redirect to=\"/home\" />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"./App.css\";\nimport Main from \"./components/MainComponent\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Main />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}